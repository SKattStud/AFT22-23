(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22607,        462]
NotebookOptionsPosition[     22088,        444]
NotebookOutlinePosition[     22519,        461]
CellTagsIndexPosition[     22476,        458]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<TempGraph.txt\>\""}], "}"}], "]"}], ",", " ", "\"\<Data\>\""}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataalt", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<TempGraph_alt.txt\>\""}], "}"}], "]"}], ",", " ", 
      "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"10", "*", "i"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "/", "10"}], 
             "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"100", "*", "i"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "/", "100"}],
              "]"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Abs. Temp in K\>\"", ",", "\"\<Zeit in sek\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1042.15"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{"Max", "[", 
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
            "1042.15"}], "}"}]}], "}"}], "]"}], "}"}]}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataalt", ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"10", "*", "i"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"dataalt", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "/", "10"}], 
            "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"100", "*", "i"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"dataalt", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "/", "100"}], 
            "]"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Zeit in sek\>\"", ",", "\"\<Abs. Temp in K\>\""}], "}"}]}],
     ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1042.15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{"Max", "[", 
             RowBox[{"dataalt", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
           "1042.15"}], "}"}]}], "}"}], "]"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8841921667310658`*^9, 3.884192219992233*^9}, {
   3.8841923291098223`*^9, 3.884192372423724*^9}, {3.8841924146613083`*^9, 
   3.8841924158537316`*^9}, {3.884192453533931*^9, 3.8841924859112024`*^9}, {
   3.884192535772169*^9, 3.8841925506805816`*^9}, {3.884192651460581*^9, 
   3.88419265362247*^9}, {3.8841931335089626`*^9, 3.8841931625942745`*^9}, {
   3.884193420462558*^9, 3.8841935410895557`*^9}, {3.8841935993804736`*^9, 
   3.884193734071432*^9}, {3.8841951235310893`*^9, 3.884195129341077*^9}, {
   3.8841951984200144`*^9, 3.884195236078087*^9}, {3.884200372472852*^9, 
   3.8842004497636538`*^9}, {3.884232349945443*^9, 3.8842323520546713`*^9}, {
   3.884232484971754*^9, 3.8842324863622847`*^9}, {3.884232566865787*^9, 
   3.884232579871852*^9}, {3.884232813929737*^9, 3.884232828851081*^9}, {
   3.8842329847315197`*^9, 3.8842329893093233`*^9}, 3.8842339425051413`*^9, 
   3.8842342132398615`*^9, {3.8842574099880915`*^9, 3.8842574164971514`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7bbc8f2c-f9ca-4b10-a4e8-62f9a24a5628"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw9m3dczf/7/xNlJVRUiDKKtPc+j9ZpnVNnn5M9622rJCHSlhC97ZUVMkKS
KDLKCpGVmZW8jRCRwq/P9/e6nv3j1q1zHufqde/1et6v6/lkMmmOZKq6mpra
u45qav/7l74i/vclicbmTf/7KuF1c78ZcXs/fX+VN/i782+3v9FwsP/fVw3v
xp74PrvlMdzPa3lu+kc2dz0Ug/+fVsd7v8M2brb6PO71r3iyN9v/va2ah8j/
+6B6Xpdj1x/bFczj3v+Ot/dihcNajVjcqPrf1wfekUO30hpHx3J5n3lpeWNP
BR+P5V7/hVcxX6dgd5f5XH4TT0daGvZr3Hzu/d94ldfES0KL5nOf18zLKvpk
lNs9jsv7ybM3u92rcWIcl9fC+/WPwsX9VByX18pb/fPHvBTtBVxeG68lKzDv
2pQFXN4f3jmTL/k9zizg8tSwtMuRCcLe8dzr1cDvINizPDKey++Ad+F7xRfK
4rn3qyNfb4fvD92F3Od1RHRfU9nw6Qu5vE74b4zFGHn5Qi6vE6555Nkv6buI
y9PAtv3px3bNXMTlaWJM4vmDFy4s4vI6w/Q/rx9PDRZzeV0w58TLyG+zF3N5
XdB2PqVao2Ixl9cVHRMb1XX6J3B53XA54uktg6gELq87eqQ2a/a7nMDlaaGi
7835fYyWcHla4JvVfegWs4TL64EE3mrHX1eWcHnamGs8eMCrgUu5vJ6Iyzw/
vWLeUi6vF7J7z/8v99pS7vW9sOXv2mNuvRK5/F7Q3nlVaOKeiP97u31vDDp5
yKJTRCL3eb1x93mszavsRC5PB3Z7r7qdPZPI5engb8ZJi3X1lKeDRLMT9ZG9
l3H16CJ2zK5AJ49lXJ4uEqKu2KpFLuPy9DBSfjexYs0yLk8PXx/V6qaVLuPy
9ODcSXLF+y3l9cERSb9FP3sncXl9IBw6r0u+RxKX1xcahp0EisgkLq8vUpJu
G/9ek8Tl9YXjM/+J20uTuDx9lIVbvHV9S3n6sJ50bMWt3slcngFcvCaZjfdI
5vIMsLDQYm1DRDKXZwBJ8bjdM9Ykc3mGCB6ZZ9twJpnLM8Tcvb10x9VTXj/c
8etudKNXCpfXD9K1k4Y6uqdwef1gPNvn97qpKVxef/zo6rSocXUKl9cf6Z/N
orxPp3B5A6Dfr73g15Q3AMXaq3rc1E7l8gbApW+RootrKpdnBKP5GOs2OZXL
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
lf3/mXBkm2UkObd///8AcHPqeA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Zeit in sek\"", TraditionalForm], 
    FormBox["\"Abs. Temp in K\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    LineBox[{{0, 1042.15}, {100, 1042.15}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}, {0, 100, 200, 300,
     400, 500, 600, 700, 800, 900, 1000, 1100}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->500,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 1046.8270411097026`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8841921863427496`*^9, 3.884192221302307*^9}, {
   3.884192363271744*^9, 3.8841923732086143`*^9}, 3.8841924163967104`*^9, {
   3.884192461174708*^9, 3.884192478037294*^9}, {3.884192538994219*^9, 
   3.8841925512119193`*^9}, {3.884192626537104*^9, 3.8841926542656097`*^9}, 
   3.884193100451411*^9, 3.8841931632108803`*^9, 3.884193198887269*^9, 
   3.884193314734369*^9, 3.8841933950060916`*^9, {3.884193478423924*^9, 
   3.8841935326883345`*^9}, {3.8841936067972093`*^9, 3.884193652611437*^9}, {
   3.8841937099016514`*^9, 3.8841937355243835`*^9}, 3.884195038065632*^9, {
   3.8841951206140385`*^9, 3.8841951300676355`*^9}, {3.8841952039158983`*^9, 
   3.8841952372521195`*^9}, 3.884200349698042*^9, {3.8842004371852636`*^9, 
   3.8842004508350425`*^9}, 3.8842309148778067`*^9, 3.8842319923498726`*^9, 
   3.884232053566147*^9, 3.8842321183105583`*^9, {3.884232238581501*^9, 
   3.8842322833019757`*^9}, {3.884232324904251*^9, 3.8842323527214317`*^9}, 
   3.884232421167277*^9, {3.884232478984654*^9, 3.8842324873726897`*^9}, {
   3.8842325454370794`*^9, 3.8842325807971954`*^9}, 3.8842326259889164`*^9, 
   3.884232829689089*^9, 3.884232865724985*^9, 3.8842330079495525`*^9, {
   3.8842339257063675`*^9, 3.8842339435871277`*^9}, 3.8842340648853707`*^9, 
   3.8842573335093203`*^9, 3.8842573669645348`*^9, 3.884257418547683*^9, 
   3.8842578361364565`*^9, 3.8855506305833836`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e2eabe23-8103-4828-95cc-a21c29d645b4"]
}, Open  ]]
},
WindowSize->{90., 430.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d8420d20-b3ff-48c6-aad2-1b67b119cb97"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5533, 140, 12647, "Input",ExpressionUUID->"7bbc8f2c-f9ca-4b10-a4e8-62f9a24a5628"],
Cell[6116, 164, 15956, 277, 502, "Output",ExpressionUUID->"e2eabe23-8103-4828-95cc-a21c29d645b4"]
}, Open  ]]
}
]
*)

